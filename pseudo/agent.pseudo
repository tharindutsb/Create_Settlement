/*
API # :
Name :
Description :
Created By :
Created No :

IP : case status
OP : status,status description,case phase


assumption:
    1. The system tracks arrears, settlements, and commission calculations.
    2. An initial arrears amount is assigned to a user upon plan creation.
    3. Bills represent amounts paid by the customer to reduce the arrears. Bills are deducted from the arrears immediately.
    4. DRC_ID is the ID of the DRC
    5. case_id is the ID of the case
    6. settelement A array is the array of initial amount and number of months
    7. settelement B array is the array of initial amount and amount of each month
    8. monitor_array is the array of settlement A or B array
    9. element is the element of monitor_array
    10. setelment phase is the function to get the settlement phase
    11. elemenet of array should be positive number
*/

// Data Structures
STRUCT Transaction:
    Date: string
    Type: string        // "Payment", "Bill", "Plan Created", "Amend Plan"
    Amount: float       // Amount paid or billed
    Arrears: float      // Remaining arrears after transaction
    RunningBalance: float
    SettledBalance: float
    PendingArrears: float

// Global Variables
currentArrears = 0
runningBalance = 0
settledBalance = 0
pendingArrears = 0
transactionHistory = []  // List of Transaction objects

// Main Execution
FUNCTION main():
    transactions = LoadTransactions()  // Load transactions from input
    FOR EACH transaction IN transactions:
        PROCESS_TRANSACTION(transaction)
    GENERATE_REPORT()

FUNCTION PROCESS_TRANSACTION(transaction):
    SWITCH transaction.Type:
        CASE "Plan Created":
            currentArrears = transaction.Amount
            pendingArrears = currentArrears
        CASE "Payment":
            IF payment is before agent acknowledgment:
                DEFER_PAYMENT(transaction)
            ELSE:
                APPLY_PAYMENT(transaction)
        CASE "Bill":
            APPLY_BILL(transaction)
        CASE "Amend Plan":
            UPDATE_PLAN(transaction)
    ENDSWITCH

FUNCTION APPLY_PAYMENT(transaction):
    payment = transaction.Amount
    IF payment > currentArrears:
        payment = currentArrears  // Cannot overpay
    currentArrears -= payment
    runningBalance += payment
    settledBalance = runningBalance - PREVIOUS_RUNNING_BALANCE()
    pendingArrears -= settledBalance
    ADD_TO_HISTORY(transaction)

FUNCTION APPLY_BILL(transaction):
    billAmount = transaction.Amount
    currentArrears -= billAmount
    runningBalance -= billAmount
    ADD_TO_HISTORY(transaction)

FUNCTION DEFER_PAYMENT(transaction):
    // Defer payment until agent acknowledgment
    ADD_TO_HISTORY(transaction, deferred=True)

FUNCTION UPDATE_PLAN(transaction):
    currentArrears = transaction.Amount
    pendingArrears = currentArrears
    ADD_TO_HISTORY(transaction)

FUNCTION ADD_TO_HISTORY(transaction, deferred=False):
    record = NEW Transaction:
        Date = transaction.Date
        Type = transaction.Type
        Amount = transaction.Amount
        Arrears = currentArrears
        RunningBalance = runningBalance
        SettledBalance = settledBalance
        PendingArrears = pendingArrears
        Deferred = deferred
    transactionHistory.APPEND(record)

FUNCTION GENERATE_REPORT():
    // Output transaction history in table format